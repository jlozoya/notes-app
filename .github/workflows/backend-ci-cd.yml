name: Backend CI/CD

on:
  push:
    branches: [master]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [master]
    paths:
      - 'backend/**'

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: backend/dist/
      - name: Deploy to server
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.2.0
        env:
          PORT: ${{ secrets.BACKEND_PORT }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REPO_URL: https://github.com/jlozoya/notes-app.git
          BRANCH: master
          APP_NAME: notesapp
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: PORT,MONGO_URI,JWT_SECRET,REPO_URL,BRANCH,APP_NAME
          script: |
            set -euo pipefail

            APP_ROOT="$HOME/notesapp"
            BACKEND_DIR="$APP_ROOT/backend"

            # Ensure git, node, pm2 exist
            if ! command -v git >/dev/null; then
              sudo apt-get update -y && sudo apt-get install -y git
            fi
            if ! command -v node >/dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            if ! command -v pm2 >/dev/null; then
              sudo npm i -g pm2
            fi

            # Create folders if they don't exist
            mkdir -p "$APP_ROOT" "$BACKEND_DIR"

            # Clone or update repo under $APP_ROOT
            if [ -d "$APP_ROOT/.git" ]; then
              echo "Updating existing git repo in $APP_ROOT ..."
              cd "$APP_ROOT"
              git fetch origin "$BRANCH"
              git checkout "$BRANCH"
              git pull --ff-only origin "$BRANCH"
            else
              if [ -d "$APP_ROOT" ] && [ "$(ls -A "$APP_ROOT")" ]; then
                echo "Directory exists but is not a git repo. Initializing and linking remote..."
                cd "$APP_ROOT"
                git init
                # add or update remote
                git remote add origin "$REPO_URL" 2>/dev/null || git remote set-url origin "$REPO_URL"
                git fetch origin "$BRANCH"
                git checkout -B "$BRANCH" "origin/$BRANCH"
              else
                echo "Cloning repo into $APP_ROOT ..."
                git clone --branch "$BRANCH" "$REPO_URL" "$APP_ROOT"
              fi
            fi

            # Ensure backend dir exists after clone (create if missing)
            mkdir -p "$BACKEND_DIR"
            cd "$BACKEND_DIR"

            # Write .env from GitHub secrets
            umask 0077
            cat > .env <<'EOF'
            PORT=${{secrets.SERVER_PORT}}
            MONGO_URI=${{secrets.MONGO_URI}}
            JWT_SECRET=${{secrets.JWT_SECRET}}
            EOF

            # Install prod deps & build
            npm ci --omit=dev
            npm run build

            # Start / restart with PM2
            if pm2 describe "$APP_NAME" >/dev/null 2>&1; then
              pm2 restart "$APP_NAME"
            else
              pm2 start dist/index.js --name "$APP_NAME"
            fi
            pm2 save

            echo "Deploy complete at $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
